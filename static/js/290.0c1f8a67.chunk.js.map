{"version":3,"file":"static/js/290.0c1f8a67.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, onClick, content }: ButtonProps) => (\r\n  <StyledButton\r\n    color={color}\r\n    onClick={onClick}\r\n    dangerouslySetInnerHTML={{ __html: content }}\r\n  />\r\n);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 5rem 0 5rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"div\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      {/* <Fade direction={direction} triggerOnce> */}\r\n      <StyledRow\r\n        justify=\"space-between\"\r\n        align=\"middle\"\r\n        id={id}\r\n        direction={direction}\r\n      >\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n        </Col>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <ContentWrapper>\r\n            <h1>{t(title)}</h1>\r\n            <Content dangerouslySetInnerHTML={{ __html: t(content) }} />\r\n            {direction === \"right\" ? (\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map(\r\n                    (\r\n                      item: {\r\n                        color?: string;\r\n                        title: string;\r\n                        to?: string;\r\n                      },\r\n                      id: number\r\n                    ) => {\r\n                      return (\r\n                        <Button\r\n                          key={id}\r\n                          color={item.color}\r\n                          onClick={() => item.to ? scrollTo(item.to) : scrollTo(\"about\")}\r\n                          content={t(item.title)}\r\n                        />\r\n                      );\r\n                    }\r\n                  )}\r\n              </ButtonWrapper>\r\n            ) : (\r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map(\r\n                      (\r\n                        item: {\r\n                          title: string;\r\n                          content: string;\r\n                          icon: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Col key={id} span={11}>\r\n                            <SvgIcon\r\n                              src={item.icon}\r\n                              width=\"60px\"\r\n                              height=\"60px\"\r\n                            />\r\n                            <MinTitle>{t(item.title)}</MinTitle>\r\n                            <MinPara>{t(item.content)}</MinPara>\r\n                          </Col>\r\n                        );\r\n                      }\r\n                    )}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            )}\r\n          </ContentWrapper>\r\n        </Col>\r\n      </StyledRow>\r\n      {/* </Fade> */}\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","onClick","content","_jsx","dangerouslySetInnerHTML","__html","ContentSection","Content","_templateObject2","StyledRow","Row","_templateObject3","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","icon","title","section","button","t","id","scrollTo","document","getElementById","scrollIntoView","behavior","children","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","map","item","to","span"],"sourceRoot":""}